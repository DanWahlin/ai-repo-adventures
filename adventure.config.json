{
    "adventures": [
        {
            "title": "Core MCP Server",
            "description": "Explore the MCP protocol implementation and adventure orchestration system",
            "files": [
                {
                    "path": "src/server.ts",
                    "description": "Main MCP server that implements stdio transport and tool execution",
                    "highlights": [
                        {
                            "name": "RepoAdventureServer.constructor",
                            "description": "Creates MCP server instance with capabilities and sets up handlers"
                        },
                        {
                            "name": "RepoAdventureServer.setupHandlers",
                            "description": "Registers ListTools and CallTool handlers with dynamic tool discovery"
                        },
                        {
                            "name": "RepoAdventureServer.run",
                            "description": "Connects stdio transport and pre-generates repomix content"
                        },
                        {
                            "name": "main",
                            "description": "Entry point with graceful shutdown handling and error recovery"
                        }
                    ]
                },
                {
                    "path": "src/adventure/adventure-manager.ts",
                    "description": "Core adventure orchestration managing state, themes, and user interactions",
                    "highlights": [
                        {
                            "name": "AdventureManager.initializeAdventure",
                            "description": "Sets up project context, generates story and adventures using LLM"
                        },
                        {
                            "name": "AdventureManager.exploreAdventure",
                            "description": "Main adventure execution flow with choice validation and content generation"
                        },
                        {
                            "name": "AdventureManager.generateAdventureContent",
                            "description": "Creates targeted or full repomix content for adventure exploration"
                        },
                        {
                            "name": "AdventureManager.getProgress",
                            "description": "Tracks completion percentage and displays adventure status"
                        },
                        {
                            "name": "AdventureState.progressPercentage",
                            "description": "Calculates completion percentage based on finished adventures"
                        }
                    ]
                }
            ]
        },
        {
            "title": "Adventure Management",
            "description": "Explore the story generation engine, LLM integration, and content analysis system",
            "files": [
                {
                    "path": "src/adventure/adventure-manager.ts",
                    "description": "Core adventure orchestration managing state, themes, and user interactions",
                    "highlights": [
                        {
                            "name": "AdventureManager.initializeAdventure",
                            "description": "Sets up project context, generates story and adventures using LLM"
                        },
                        {
                            "name": "AdventureManager.exploreAdventure",
                            "description": "Main adventure execution flow with choice validation and content generation"
                        },
                        {
                            "name": "AdventureManager.generateAdventureContent",
                            "description": "Creates targeted or full repomix content for adventure exploration"
                        },
                        {
                            "name": "AdventureState.reset",
                            "description": "Clears all adventure state for new session initialization"
                        }
                    ]
                },
                {
                    "path": "src/adventure/story-generator.ts",
                    "description": "Dynamic story generation with LLM integration and theme-based narratives",
                    "highlights": [
                        {
                            "name": "StoryGenerator.generateStoryAndAdventures",
                            "description": "Creates complete story and adventure list using LLM with JSON responses"
                        },
                        {
                            "name": "StoryGenerator.generateAdventureContent",
                            "description": "Generates detailed adventure content with code snippets and exploration tasks"
                        },
                        {
                            "name": "StoryGenerator.buildStoryGenerationPrompt",
                            "description": "Constructs detailed prompts for LLM story generation with theme guidelines"
                        },
                        {
                            "name": "StoryGenerator.getThemeGuidelines",
                            "description": "Provides theme-specific vocabulary and style guidelines for consistent narratives"
                        }
                    ]
                },
                {
                    "path": "src/analyzer/repomix-analyzer.ts",
                    "description": "Repomix integration for codebase analysis and targeted content extraction",
                    "highlights": [
                        {
                            "name": "RepomixAnalyzer.generateTargetedContent",
                            "description": "Creates focused repomix content for specific files using include patterns"
                        },
                        {
                            "name": "RepomixAnalyzer.generateRepomixContext",
                            "description": "Generates full project context with caching and security validation"
                        },
                        {
                            "name": "RepomixAnalyzer.captureRepomixStdout",
                            "description": "Executes repomix CLI as subprocess and captures structured output"
                        },
                        {
                            "name": "RepomixAnalyzer.validateProjectPath",
                            "description": "Security validation preventing access to system directories"
                        }
                    ]
                },
                {
                    "path": "src/llm/llm-client.ts",
                    "description": "Multi-provider LLM client supporting OpenAI, Azure OpenAI, and GitHub Models",
                    "highlights": [
                        {
                            "name": "LLMClient.constructor",
                            "description": "Auto-detects provider type and configures appropriate API client"
                        },
                        {
                            "name": "LLMClient.generateResponse",
                            "description": "Handles LLM requests with timeout protection and JSON response formatting"
                        },
                        {
                            "name": "LLMClient.getApiKey",
                            "description": "Determines correct API key based on provider (GITHUB_TOKEN vs LLM_API_KEY)"
                        },
                        {
                            "name": "LLMClient.isAzureOpenAI",
                            "description": "Provider detection for Azure-specific configuration handling"
                        }
                    ]
                }
            ]
        }
    ]
}