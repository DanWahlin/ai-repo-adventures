# Story Generation Prompt

üö® MANDATORY STORY FORMAT:

Your story MUST include:
1. A themed title with line breaks before and after
2. The story paragraph (75-100 words)
3. The quest ending

## FORMAT REQUIREMENT:

**üöÄ [Your Themed Title Here]**

[Your story paragraph...]

üó∫Ô∏è **Your Quest Awaits** - Choose your path wisely, brave adventurer!

### EXAMPLE (DO NOT COPY):

**üöÄ Starship Nexus Command Mission**

Deep in the cosmic realm, the vessel explores the MCP galaxy...

You are a technical education specialist creating story-based workshops.
Transform this codebase into an engaging {{theme}}-themed narrative.

## Project Codebase
{{repomixContent}}

## Adventure Guidance Based Upon Project
{{adventureGuidance}}

## Theme Guidelines
{{themeGuidelines}}

## Story Creation Instructions:
1. ANALYZE the repomix content above to INFER what type of project this is
2. Create a {{theme}}-themed narrative that INTEGRATES the project details naturally
3. **CRITICAL: ONLY reference files that actually exist in the "## Project Codebase" content above**
4. **DO NOT invent, create, or hallucinate any file names**
5. The story content should be 1-2 paragraphs (75-100 words max) that tells a cohesive narrative
6. Reference actual technologies, patterns, and concepts from the real code
7. Make the reader understand what this specific codebase does through the narrative
8. End with "\nüó∫Ô∏è **Your Quest Awaits** - Choose your path wisely, brave adventurer!"


**EXCELLENT EXAMPLE - USE AS STRUCTURAL TEMPLATE ONLY:**

**üöÄ Mission MCP: Refactor-1 and the Codebase Constellation**

"Aboard the *Starship Refactor-1*, an elite crew of codonauts embarks on an interstellar mission to decode and optimize the galactic repository known as MCP. Guided by the cutting-edge *Repomix Navigator* and powered by *TypeScript Reactors*, the crew must traverse cosmic data streams, align architectural constellations, and unveil the mysteries of adventure-driven exploration. Their ultimate goal: to transform the sprawling complexity of the MCP system into a harmonious and navigable stellar map. The fate of the intergalactic coding alliance rests on their success. Will you join their quest and become a legendary codonaut?"

‚ö†Ô∏è **CRITICAL: This is ONLY a structural template showing excellent integration. DO NOT copy any phrases, words, or concepts. Create completely original content that follows the same integration approach but uses entirely different vocabulary, metaphors, and narrative elements. Notice how it weaves real technologies (MCP, Repomix, TypeScript) into creative metaphors (Starship Refactor-1, codonauts, TypeScript Reactors, cosmic data streams).**

**WHAT MAKES THIS EXCELLENT:**
1. **Creative Technology Integration**: "Repomix Navigator", "TypeScript Reactors", "cosmic data streams" (real tech as themed elements)
2. **Purpose Clarity**: "decode and optimize the galactic repository", "transform sprawling complexity into navigable stellar map" (explains what MCP does)
3. **Themed Vocabulary**: "codonauts", "interstellar mission", "architectural constellations", "intergalactic coding alliance"
4. **Named Vessel**: "*Starship Refactor-1*" (creative name suggesting code improvement)
5. **Mission Focus**: Clear goal that matches the actual codebase purpose with engaging call-to-action

**YOUR STORY MUST BE COMPLETELY ORIGINAL:**
- Give the {{theme === 'space' ? 'starship/vessel' : theme === 'mythical' ? 'kingdom/realm' : theme === 'ancient' ? 'temple/civilization' : 'system'}} a UNIQUE creative name that reflects the actual project (NOT "MCP Odyssey" or similar)
- Mention 3-4 actual technologies from the repomix content as {{theme}} elements using YOUR OWN creative metaphors (NOT "reactors", "constellations", etc.)
- Clearly explain the project's real purpose through the {{theme}} narrative using FRESH language and imagery
- Create a specific {{theme === 'space' ? 'mission' : theme === 'mythical' ? 'quest' : theme === 'ancient' ? 'discovery' : 'objective'}} that mirrors what the codebase actually accomplishes with ORIGINAL phrasing
- Use italics for the main {{theme === 'space' ? 'vessel' : theme === 'mythical' ? 'kingdom' : theme === 'ancient' ? 'temple' : 'system'}} name and key systems

üö´ **FORBIDDEN:** DO NOT use any phrases from the template like "vast expanse", "digital cosmos", "embarks on a mission", "coherent constellations", "decode the mysteries", etc. Create entirely new metaphors and descriptions.

## Adventure Quests as Cohesive Story Chapters
CRITICAL: Each quest is like a chapter in a larger story arc. The quests must be interconnected and build upon each other to create a cohesive narrative:
- Quest 1 should establish the main story arc and introduce the central challenge/mission
- Each subsequent quest should advance the same overarching narrative
- All quests contribute to resolving the main story conflict/mission
- The final quest should complete the overarching narrative with resolution
- Each quest builds directly on events from previous quests
- The story should have clear narrative continuity and progression toward a unified goal

**CRITICAL FOR DEVELOPERS: Each quest MUST have emoji and technical details**
- **QUEST TITLES**: Each quest title MUST start with a thematic emoji (üöÄ‚ö°üîóüõ°Ô∏èüí´üåü‚ú®üíéüéØüîß) 
- **DESCRIPTIONS**: Be creative, but mention actual file names, technologies, patterns, or code concepts from the repomix content
- Help developers understand exactly what they'll learn (e.g., "server.ts", "MCP protocol handlers", "TypeScript interfaces", "error handling patterns")
- Make descriptions informative enough for developers to choose based on their interests
- **DESCRIPTION REQUIREMENT: Each quest description MUST be exactly 1 sentence that specifically mentions the technologies, files, or code concepts developers will explore (e.g., "Explore server.ts initialization, MCP protocol setup, and tool registration patterns")**

## Response Format
Return a valid JSON object:
{
  "story": "Integrated narrative that establishes a single overarching story with interconnected quests (a quest is like a chapter)",
  "adventures": [
    {
      "id": "quest-1",
      "title": "üöÄ Quest 1: [Theme-appropriate title that begins the main story]",
      "description": "1 sentence mentioning specific technologies/files/concepts covered (e.g., 'Explore server.ts, MCP protocol handlers, and TypeScript tool registration')",
      "codeFiles": ["ONLY-files-that-appear-in-'## Project Codebase' above"]
    },
    {
      "id": "quest-2", 
      "title": "‚ö° Quest 2: [Title that continues the main narrative from Quest 1]",
      "description": "1 sentence mentioning specific technologies/files/concepts covered (e.g., 'Explore server.ts, MCP protocol handlers, and TypeScript tool registration')",
      "codeFiles": ["relevant-files"]
    }
  ]
}

**Important for codeFiles arrays:**
- ONLY include file paths that appear as "## File: path/filename" in the repomix content above
- Double-check each file path exists in the ## Project Codebase content before including it
- It's better to have empty codeFiles arrays than incorrect file paths
- Use the exact file path as shown in the "## File:" headers from ## Project Codebase
- **PRIORITIZE core files**: Choose core application files over utility/support files
- **Preferred file types for adventures**: main server files, core business logic, API endpoints, application entry points, key algorithms
- **Less preferred for adventures**: configuration files, utility classes, cache implementations, error handlers, type definitions

**Final Validation Step:**
Before returning your response, review your story and codeFiles arrays to ensure:
1. No file names are mentioned in the story unless they appear in "## File:" headers in ## Project Codebase. NEVER invent file names or code.
2. All codeFiles entries match exactly with "## File:" headers in ## Project Codebase
3. When in doubt, omit specific file references and focus on general concepts instead

**File Selection Strategy:**
- ‚úÖ PREFER: Files that implement core business logic, main application flow, user-facing functionality
- ‚ùå AVOID: Files in /shared/, /utils/, /helpers/ directories, files with names like cache, error, types, constants

Create 3-5 interconnected quests (a quest is like a chapter) that form a complete narrative arc with a unified story:
- Quest 1: Establish the main story mission/challenge and begin the narrative
- Quests 2-3: Advance the central storyline through progressive discoveries that build on each other
- Final Quest: Resolve the main narrative conflict and complete the overarching story
Each quest must directly reference and build upon events from previous quests, creating one cohesive adventure story rather than separate standalone tasks.